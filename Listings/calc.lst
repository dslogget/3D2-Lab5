


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; (c) Mike Brady, 2011 -- 2019.
    5 00000000         
    6 00000000                 IMPORT           ReadKeyPress ;Import subroutine
                                                             to read keys
    7 00000000                 IMPORT           Display
    8 00000000                 INCLUDE          REG_DEFS.s
    1 00000000                 AREA             REG_DEFS, CODE, READONLY
    2 00000000         
    3 00000000         
    4 00000000         ;IO DEFS
    5 00000000 E0028000 
                       IO0PIN  EQU              0xE0028000
    6 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
    7 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
    8 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
    9 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   10 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   11 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   12 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   13 00000000         
   14 00000000         
   15 00000000 FFFFF030 
                       VICVECTADDR
                               EQU              0xFFFFF030
   16 00000000 FFFFF00C 
                       VICINTSELECT
                               EQU              0xFFFFF00C
   17 00000000 FFFFF010 
                       VICINTENABLE
                               EQU              0xFFFFF010
   18 00000000 FFFFF034 
                       VICDEFVECTADDR
                               EQU              0xFFFFF034
   19 00000000         
   20 00000000 E0004000 
                       T0IR    EQU              0xE0004000
   21 00000000 E0004004 
                       T0TCR   EQU              0xE0004004
   22 00000000 E0004008 
                       T0TC    EQU              0xE0004008
   23 00000000 E000400C 
                       T0PR    EQU              0xE000400C
   24 00000000 E0004010 
                       T0PC    EQU              0xE0004010
   25 00000000 E0004014 
                       T0MCR   EQU              0xE0004014
   26 00000000 E0004018 
                       T0MR0   EQU              0xE0004018
   27 00000000 E000401C 



ARM Macro Assembler    Page 2 


                       T0MR1   EQU              0xE000401C
   28 00000000 E0004020 
                       T0MR2   EQU              0xE0004020
   29 00000000 E0004024 
                       T0MR3   EQU              0xE0004024
   30 00000000 E0004028 
                       T0CCR   EQU              0xE0004028
   31 00000000 E000402C 
                       T0CR0   EQU              0xE000402C
   32 00000000 E0004030 
                       T0CR1   EQU              0xE0004030
   33 00000000 E0004034 
                       T0CR2   EQU              0xE0004034
   34 00000000 E0004038 
                       T0CR3   EQU              0xE0004038
   35 00000000 E000403C 
                       T0EMR   EQU              0xE000403C
   36 00000000 E0004070 
                       T0CTCR  EQU              0xE0004070
   37 00000000         
   38 00000000 E0008000 
                       T1IR    EQU              0xE0008000
   39 00000000 E0008004 
                       T1TCR   EQU              0xE0008004
   40 00000000 E0008008 
                       T1TC    EQU              0xE0008008
   41 00000000 E000800C 
                       T1PR    EQU              0xE000800C
   42 00000000 E0008010 
                       T1PC    EQU              0xE0008010
   43 00000000 E0008014 
                       T1MCR   EQU              0xE0008014
   44 00000000 E0008018 
                       T1MR0   EQU              0xE0008018
   45 00000000 E000801C 
                       T1MR1   EQU              0xE000801C
   46 00000000 E0008020 
                       T1MR2   EQU              0xE0008020
   47 00000000 E0008024 
                       T1MR3   EQU              0xE0008024
   48 00000000 E0008028 
                       T1CCR   EQU              0xE0008028
   49 00000000 E000802C 
                       T1CR0   EQU              0xE000802C
   50 00000000 E0008030 
                       T1CR1   EQU              0xE0008030
   51 00000000 E0008034 
                       T1CR2   EQU              0xE0008034
   52 00000000 E0008038 
                       T1CR3   EQU              0xE0008038
   53 00000000 E000803C 
                       T1EMR   EQU              0xE000803C
   54 00000000 E0008070 
                       T1CTCR  EQU              0xE0008070
   55 00000000         
   56 00000000         
   57 00000000                 END
    9 00000000                 export           calc
   10 00000000         



ARM Macro Assembler    Page 3 


   11 00000000         ;Main loop
   12 00000000         calc
   13 00000000         ;val in R5 = value to display
   14 00000000         
   15 00000000 E3A05000        LDR              R5, =0
   16 00000004 E59F1130        LDR              R1, =IO1DIR
   17 00000008 E5912000        LDR              R2, [R1]
   18 0000000C E382280F        ORR              R2, #(2_1111 << 16)
   19 00000010 E5812000        STR              R2, [R1]
   20 00000014 E59F1124        LDR              R1, =IO1SET
   21 00000018 E3A0480F        LDR              R4, =(2_1111 << 16)
   22 0000001C E5814000        STR              R4, [R1]
   23 00000020         
   24 00000020         
   25 00000020 E3A07000        MOV              R7, #0      ;Initialising stack
                                                             counter (doesn't i
                                                            nclude itself)
   26 00000024 E59FC118        LDR              R12, =STK_TOP ;Initialising sta
                                                            ck pointer
   27 00000028 E52C7004        STR              R7, [R12, #-4]! ;Adding stack c
                                                            ounter to top of st
                                                            ack
   28 0000002C         
   29 0000002C         
   30 0000002C         
   31 0000002C         LPST
   32 0000002C E3A02000        LDR              R2, =0
   33 00000030         
   34 00000030         
   35 00000030 EBFFFFFE        BL               ReadKeyPress ;Set R0 to +-{20-2
                                                            3}
   36 00000034         
   37 00000034         ;Switch statement for button presses
   38 00000034 E3500014        CMP              R0, #20
   39 00000038 0A00000D        BEQ              CASE1
   40 0000003C E3700014        CMP              R0, #-20
   41 00000040 0A00002C        BEQ              DEFAULT
   42 00000044 E3500015        CMP              R0, #21
   43 00000048 0A00000C        BEQ              CASE2
   44 0000004C E3700015        CMP              R0, #-21
   45 00000050 0A000028        BEQ              DEFAULT
   46 00000054 E3500016        CMP              R0, #22
   47 00000058 0A00000B        BEQ              CASE3
   48 0000005C E3700016        CMP              R0, #-22
   49 00000060 0A000013        BEQ              CASE3L
   50 00000064 E3500017        CMP              R0, #23
   51 00000068 0A000007        BEQ              CASE3
   52 0000006C E3700017        CMP              R0, #-23
   53 00000070 0A000017        BEQ              CASE4L
   54 00000074         
   55 00000074         CASE1
   56 00000074 E2855201        ADD              R5, R5, #(2_1 << 28)
   57 00000078 E1A03E25        LSR              R3, R5, #28
   58 0000007C EA00002B        B                SwitchEnd
   59 00000080         
   60 00000080         
   61 00000080         CASE2
   62 00000080 E2455201        SUB              R5, R5, #(2_1 << 28)
   63 00000084 E1A03E25        LSR              R3, R5, #28



ARM Macro Assembler    Page 4 


   64 00000088 EA000028        B                SwitchEnd
   65 0000008C         
   66 0000008C         
   67 0000008C         CASE3
   68 0000008C E49C7004        LDR              R7, [R12], #4 ;Pop stack counte
                                                            r from stack
   69 00000090 E3570002        CMP              R7, #2
   70 00000094 AA000018        BGE              OPERATE     ;Check if there is 
                                                            a number and an ope
                                                            rator in the stack
   71 00000098 E2877002        ADD              R7, #2      ;Increment stack co
                                                            unter
   72 0000009C E52C5004        STR              R5, [R12, #-4]! 
                                                            ;Push R5 onto stack
                                                            
   73 000000A0 E52C0004        STR              R0, [R12, #-4]! ;Push operation
                                                             onto stack
   74 000000A4 E1A03E25        LSR              R3, R5, #28 ;Store for display
   75 000000A8 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   76 000000AC E3A05000        MOV              R5, #0      ;Reset R5
   77 000000B0 EA00001E        B                SwitchEnd   ;Display Result
   78 000000B4         
   79 000000B4         
   80 000000B4         CASE3L
   81 000000B4 E92D0004        STMFD            sp!, {R2}   ;Store previous val
                                                            ues
   82 000000B8 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   83 000000BC E49C2004        LDR              R2, [R12], #4 ;Pop operator fro
                                                            m stack
   84 000000C0 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
   85 000000C4 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   86 000000C8 E1A03E25        LSR              R3, R5, #28 ;Store for display
   87 000000CC E8BD0004        LDMFD            sp!, {R2}   ;Restore to previou
                                                            s values
   88 000000D0 EA000016        B                SwitchEnd   ;Display Result
   89 000000D4         
   90 000000D4         CASE4L
   91 000000D4 E92D0004        STMFD            sp!, {R2}   ;Store previous val
                                                            ues
   92 000000D8 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   93 000000DC E49C2004        LDR              R2, [R12], #4 ;Pop operator fro
                                                            m stack
   94 000000E0 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
   95 000000E4 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   96 000000E8 E3A03000        MOV              R3, #0      ;Zero display
   97 000000EC E3A05000        MOV              R5, #0      ;Zero number storag
                                                            e
   98 000000F0 E8BD0004        LDMFD            sp!, {R2}   ;Restore to previou
                                                            s values
   99 000000F4 EA00000D        B                SwitchEnd   ;Branch with Displa
                                                            y 0
  100 000000F8         



ARM Macro Assembler    Page 5 


  101 000000F8         
  102 000000F8         DEFAULT
  103 000000F8         ;LDR R3, =2_1111
  104 000000F8 EA00000C        B                SwitchEnd
  105 000000FC         
  106 000000FC         
  107 000000FC         OPERATE
  108 000000FC E92D0016        STMFD            sp!, {R1,R2,R4} ;Store previous
                                                             values
  109 00000100 E2477001        SUB              R7, #1      ;Decrement stack co
                                                            unter
  110 00000104 E49C4004        LDR              R4, [R12], #4 ;Pop operator fro
                                                            m stack
  111 00000108 E49C2004        LDR              R2, [R12], #4 ;Pop num1 from st
                                                            ack
  112 0000010C E3540016        CMP              R4, #22
  113 00000110 00825005        ADDEQ            R5, R2, R5  ;Add num1 & num2
  114 00000114 10425005        SUBNE            R5, R2, R5  ;Subtract num1 & nu
                                                            m2
  115 00000118 E52C5004        STR              R5, [R12, #-4]! ;Store output
  116 0000011C E1A03E25        LSR              R3, R5, #28 ;Store for display
  117 00000120 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
  118 00000124 E3A05000        MOV              R5, #0      ;Reset R5
  119 00000128 E8BD0016        LDMFD            sp!, {R1,R2,R4} ;Restore to pre
                                                            vious values
  120 0000012C EAFFFFFF        B                SwitchEnd
  121 00000130         
  122 00000130         
  123 00000130         
  124 00000130         
  125 00000130         
  126 00000130         SwitchEnd
  127 00000130         
  128 00000130         ;Display to LEDs
  129 00000130         
  130 00000130 E1A01003        MOV              R1, R3
  131 00000134         
  132 00000134 EBFFFFFE        BL               Display
  133 00000138         
  134 00000138         ;TST R3, #2_1000
  135 00000138         ;ORRNE R2, #2_0001
  136 00000138         ;TST R3, #2_0100
  137 00000138         ;ORRNE R2, #2_0010
  138 00000138         ;TST R3, #2_0010
  139 00000138         ;ORRNE R2, #2_0100
  140 00000138         ;TST R3, #2_0001
  141 00000138         ;ORRNE R2, #2_1000
  142 00000138         ;LDR R1, =IO1SET
  143 00000138         ;LDR R4, =(2_1111 << 16)
  144 00000138         ;STR R4, [R1]
  145 00000138         ;LDR R1, =IO1CLR
  146 00000138         ;LSL R2, #16
  147 00000138         ;STR R2, [R1]
  148 00000138         
  149 00000138         
  150 00000138 EAFFFFBB        B                LPST
  151 0000013C         
  152 0000013C         



ARM Macro Assembler    Page 6 


  153 0000013C E0028018 
              E0028014 
              00000000         AREA             STK, CODE, READWRITE
  154 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 7 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       STK_TOP SPACE            256
  155 00000100         
  156 00000100                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\c
alc.d -o.\calc.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\
Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SET
A 1" --predefine="__UVISION_VERSION SETA 525" --list=.\listings\calc.lst Calc.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file Calc.s
   Uses
      None
Comment: AsmTemplate unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CASE1 00000074

Symbol: CASE1
   Definitions
      At line 55 in file Calc.s
   Uses
      At line 39 in file Calc.s
Comment: CASE1 used once
CASE2 00000080

Symbol: CASE2
   Definitions
      At line 61 in file Calc.s
   Uses
      At line 43 in file Calc.s
Comment: CASE2 used once
CASE3 0000008C

Symbol: CASE3
   Definitions
      At line 67 in file Calc.s
   Uses
      At line 47 in file Calc.s
      At line 51 in file Calc.s

CASE3L 000000B4

Symbol: CASE3L
   Definitions
      At line 80 in file Calc.s
   Uses
      At line 49 in file Calc.s
Comment: CASE3L used once
CASE4L 000000D4

Symbol: CASE4L
   Definitions
      At line 90 in file Calc.s
   Uses
      At line 53 in file Calc.s
Comment: CASE4L used once
DEFAULT 000000F8

Symbol: DEFAULT
   Definitions
      At line 102 in file Calc.s
   Uses
      At line 41 in file Calc.s
      At line 45 in file Calc.s

LPST 0000002C

Symbol: LPST
   Definitions
      At line 31 in file Calc.s
   Uses
      At line 150 in file Calc.s
Comment: LPST used once
OPERATE 000000FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: OPERATE
   Definitions
      At line 107 in file Calc.s
   Uses
      At line 70 in file Calc.s
Comment: OPERATE used once
REG_DEFS 00000000

Symbol: REG_DEFS
   Definitions
      At line 1 in file REG_DEFS.s
   Uses
      None
Comment: REG_DEFS unused
SwitchEnd 00000130

Symbol: SwitchEnd
   Definitions
      At line 126 in file Calc.s
   Uses
      At line 58 in file Calc.s
      At line 64 in file Calc.s
      At line 77 in file Calc.s
      At line 88 in file Calc.s
      At line 99 in file Calc.s
      At line 104 in file Calc.s
      At line 120 in file Calc.s

calc 00000000

Symbol: calc
   Definitions
      At line 12 in file Calc.s
   Uses
      At line 9 in file Calc.s
Comment: calc used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STK 00000000

Symbol: STK
   Definitions
      At line 153 in file Calc.s
   Uses
      None
Comment: STK unused
STK_TOP 00000000

Symbol: STK_TOP
   Definitions
      At line 154 in file Calc.s
   Uses
      At line 26 in file Calc.s
Comment: STK_TOP used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 8 in file REG_DEFS.s
   Uses
      None
Comment: IO0CLR unused
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 7 in file REG_DEFS.s
   Uses
      None
Comment: IO0DIR unused
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 5 in file REG_DEFS.s
   Uses
      None
Comment: IO0PIN unused
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 6 in file REG_DEFS.s
   Uses
      None
Comment: IO0SET unused
IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 12 in file REG_DEFS.s
   Uses
      None
Comment: IO1CLR unused
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 11 in file REG_DEFS.s
   Uses
      At line 16 in file Calc.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 9 in file REG_DEFS.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 10 in file REG_DEFS.s
   Uses
      At line 20 in file Calc.s
Comment: IO1SET used once
T0CCR E0004028

Symbol: T0CCR
   Definitions
      At line 30 in file REG_DEFS.s
   Uses
      None
Comment: T0CCR unused
T0CR0 E000402C

Symbol: T0CR0
   Definitions
      At line 31 in file REG_DEFS.s
   Uses
      None
Comment: T0CR0 unused
T0CR1 E0004030

Symbol: T0CR1
   Definitions
      At line 32 in file REG_DEFS.s
   Uses
      None
Comment: T0CR1 unused
T0CR2 E0004034

Symbol: T0CR2
   Definitions
      At line 33 in file REG_DEFS.s
   Uses
      None
Comment: T0CR2 unused
T0CR3 E0004038

Symbol: T0CR3
   Definitions
      At line 34 in file REG_DEFS.s
   Uses
      None
Comment: T0CR3 unused
T0CTCR E0004070

Symbol: T0CTCR
   Definitions
      At line 36 in file REG_DEFS.s
   Uses
      None
Comment: T0CTCR unused
T0EMR E000403C

Symbol: T0EMR
   Definitions
      At line 35 in file REG_DEFS.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: T0EMR unused
T0IR E0004000

Symbol: T0IR
   Definitions
      At line 20 in file REG_DEFS.s
   Uses
      None
Comment: T0IR unused
T0MCR E0004014

Symbol: T0MCR
   Definitions
      At line 25 in file REG_DEFS.s
   Uses
      None
Comment: T0MCR unused
T0MR0 E0004018

Symbol: T0MR0
   Definitions
      At line 26 in file REG_DEFS.s
   Uses
      None
Comment: T0MR0 unused
T0MR1 E000401C

Symbol: T0MR1
   Definitions
      At line 27 in file REG_DEFS.s
   Uses
      None
Comment: T0MR1 unused
T0MR2 E0004020

Symbol: T0MR2
   Definitions
      At line 28 in file REG_DEFS.s
   Uses
      None
Comment: T0MR2 unused
T0MR3 E0004024

Symbol: T0MR3
   Definitions
      At line 29 in file REG_DEFS.s
   Uses
      None
Comment: T0MR3 unused
T0PC E0004010

Symbol: T0PC
   Definitions
      At line 24 in file REG_DEFS.s
   Uses
      None
Comment: T0PC unused
T0PR E000400C



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: T0PR
   Definitions
      At line 23 in file REG_DEFS.s
   Uses
      None
Comment: T0PR unused
T0TC E0004008

Symbol: T0TC
   Definitions
      At line 22 in file REG_DEFS.s
   Uses
      None
Comment: T0TC unused
T0TCR E0004004

Symbol: T0TCR
   Definitions
      At line 21 in file REG_DEFS.s
   Uses
      None
Comment: T0TCR unused
T1CCR E0008028

Symbol: T1CCR
   Definitions
      At line 48 in file REG_DEFS.s
   Uses
      None
Comment: T1CCR unused
T1CR0 E000802C

Symbol: T1CR0
   Definitions
      At line 49 in file REG_DEFS.s
   Uses
      None
Comment: T1CR0 unused
T1CR1 E0008030

Symbol: T1CR1
   Definitions
      At line 50 in file REG_DEFS.s
   Uses
      None
Comment: T1CR1 unused
T1CR2 E0008034

Symbol: T1CR2
   Definitions
      At line 51 in file REG_DEFS.s
   Uses
      None
Comment: T1CR2 unused
T1CR3 E0008038

Symbol: T1CR3
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 52 in file REG_DEFS.s
   Uses
      None
Comment: T1CR3 unused
T1CTCR E0008070

Symbol: T1CTCR
   Definitions
      At line 54 in file REG_DEFS.s
   Uses
      None
Comment: T1CTCR unused
T1EMR E000803C

Symbol: T1EMR
   Definitions
      At line 53 in file REG_DEFS.s
   Uses
      None
Comment: T1EMR unused
T1IR E0008000

Symbol: T1IR
   Definitions
      At line 38 in file REG_DEFS.s
   Uses
      None
Comment: T1IR unused
T1MCR E0008014

Symbol: T1MCR
   Definitions
      At line 43 in file REG_DEFS.s
   Uses
      None
Comment: T1MCR unused
T1MR0 E0008018

Symbol: T1MR0
   Definitions
      At line 44 in file REG_DEFS.s
   Uses
      None
Comment: T1MR0 unused
T1MR1 E000801C

Symbol: T1MR1
   Definitions
      At line 45 in file REG_DEFS.s
   Uses
      None
Comment: T1MR1 unused
T1MR2 E0008020

Symbol: T1MR2
   Definitions
      At line 46 in file REG_DEFS.s
   Uses
      None



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: T1MR2 unused
T1MR3 E0008024

Symbol: T1MR3
   Definitions
      At line 47 in file REG_DEFS.s
   Uses
      None
Comment: T1MR3 unused
T1PC E0008010

Symbol: T1PC
   Definitions
      At line 42 in file REG_DEFS.s
   Uses
      None
Comment: T1PC unused
T1PR E000800C

Symbol: T1PR
   Definitions
      At line 41 in file REG_DEFS.s
   Uses
      None
Comment: T1PR unused
T1TC E0008008

Symbol: T1TC
   Definitions
      At line 40 in file REG_DEFS.s
   Uses
      None
Comment: T1TC unused
T1TCR E0008004

Symbol: T1TCR
   Definitions
      At line 39 in file REG_DEFS.s
   Uses
      None
Comment: T1TCR unused
VICDEFVECTADDR FFFFF034

Symbol: VICDEFVECTADDR
   Definitions
      At line 18 in file REG_DEFS.s
   Uses
      None
Comment: VICDEFVECTADDR unused
VICINTENABLE FFFFF010

Symbol: VICINTENABLE
   Definitions
      At line 17 in file REG_DEFS.s
   Uses
      None
Comment: VICINTENABLE unused
VICINTSELECT FFFFF00C




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: VICINTSELECT
   Definitions
      At line 16 in file REG_DEFS.s
   Uses
      None
Comment: VICINTSELECT unused
VICVECTADDR FFFFF030

Symbol: VICVECTADDR
   Definitions
      At line 15 in file REG_DEFS.s
   Uses
      None
Comment: VICVECTADDR unused
46 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display 00000000

Symbol: Display
   Definitions
      At line 7 in file Calc.s
   Uses
      At line 132 in file Calc.s
Comment: Display used once
ReadKeyPress 00000000

Symbol: ReadKeyPress
   Definitions
      At line 6 in file Calc.s
   Uses
      At line 35 in file Calc.s
Comment: ReadKeyPress used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file Calc.s
   Uses
      None
Comment: main unused
3 symbols
398 symbols in table
